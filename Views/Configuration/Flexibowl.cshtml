
<link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@600&display=swap" rel="stylesheet">
<br />

@model IEnumerable<Flexi_Arm.Models.Flexibowl>
    <h1>Commandes Flexibowl</h1>


<div class="container">
    <div class="row flex-row">
        <div class="col-md-6 ">
            <div class="card-body">
                <div class="light-container  mr-4">
                    <h2> @ViewBag.Titre</h2>

                    <label class="light-label toggle" for="toggle-button1">
                        Lumière :
                        <input type="checkbox" class="toggle-checkbox" id="toggle-button1" name="toggle-button" data-action="@Url.Action("AllumerLumiere", "Configuration")">
                        <div class="toggle-switch"></div>
                    </label>
                    <label class="light-label toggle" for="toggle-button2" style="float:right">
                        Moteur :
                        <input type="checkbox" class="toggle-checkbox" id="toggle-button2" name="toggle-button" data-action="@Url.Action("AllumerServo", "Configuration")">
                        <div class="toggle-switch"></div>
                    </label>
                </div>
            </div>

        </div>
        <div class="col-md-6 ">
            <div class="card-body">
                <a href="~/Communication_flexi/">
                    <button class="button-85-pushable" value="1" role="button" style="">
                        <span class="button-85-shadow"></span>
                        <span class="button-85-edge"></span>
                        <span class="button-85-front text">Flexibowl</span>
                    </button>
                </a>
                <br />
                <br />
                <center>
                    <select id="selectBox" name="selectBox" onchange="submit()">
                        <option value="">Sélectionnez un élément</option>
                        @foreach (var item in Model)
                        {
                            <option value="@item.Id_flexi">@item.Name</option>
                        }
                    </select>
                </center>
                <script>
                    function submit() {
                        var selectBox = document.getElementById("selectBox");
                        var selectedValue = selectBox.options[selectBox.selectedIndex].value;
                        window.location.href = "/Configuration/Selected?id=" + selectedValue;
                    }
                </script>
            </div>
        </div>
    </div>
    <br />
    <br />

</div>

<script>
    $(document).ready(function () {
        // Fonction pour envoyer la commande et afficher le résultat
        function sendCommand(isChecked, actionUrl, statusMessageId) {
            $.ajax({
                type: 'POST',
                url: actionUrl,
                data: { toggle: isChecked },
                success: function (result) {
                    $('#' + statusMessageId).text(result);
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                }
            });
        }

        // Gestion des événements des sliders
        $('#toggle-button1').change(function () {
            var isChecked = $(this).is(':checked');
            var actionUrl = $(this).data('action');
            sendCommand(isChecked, actionUrl, 'status-message1');
        });

        $('#toggle-button2').change(function () {
            var isChecked = $(this).is(':checked');
            var actionUrl = $(this).data('action');
            sendCommand(isChecked, actionUrl, 'status-message2');
        });
    });
</script>

<div class="container">
    <div class="row">
        <div class="col-6">
            <center>
                <div class="card">
                    <div class="card-header">
                        <h2>Avance</h2>
                    </div>
                    <div class="card-body">
                        <form method="post" action="ForwardAction">
                            <h5>Accélération</h5>
                            <input id="input_1" name="input_1" type="range" min="0" max="10000" step="10" />
                            <p>Valeur: <output id="value_1"></output></p>
                            <h5>Décélération</h5>
                            <input id="input_2" name="input_2" type="range" min="0" max="10000" step="10" />
                            <p>Valeur: <output id="value_2"></output></p>
                            <h5>Angle</h5>
                            <input id="input_3" name="input_3" type="range" min="0" max="1000" step="10" />
                            <p>Valeur: <output id="value_3"></output></p>
                            <h5>Vitesse</h5>
                            <input id="input_4" name="input_4" type="range" min="0" max="90" step="1" />
                            <p>Valeur: <output id="value_4"></output></p>
                            <input type="submit" value="Faire tourner le flexibowl">
                        </form>
                    </div>
                </div>
            </center>
        </div>
        <div class="col-6">
            <center>
                <div class="card">
                    <div class="card-header">
                        <h2>Recule</h2>
                    </div>
                    <div class="card-body">
                        <form method="post" action="BackwardAction">
                            <h5> Décélération</h5>
                            <input id="input_5" name="input_1" type="range" min="0" max="10000" step="10" />
                            <p>Valeur: <output id="value_5"></output></p>
                            <h5>Décélération</h5>
                            <input id="input_6" name="input_2" type="range" min="0" max="10000" step="10" />
                            <p>Valeur: <output id="value_6"></output></p>
                            <h5>Angle</h5>
                            <input id="input_7" name="input_3" type="range" min="0" max="360" step="1" />
                            <p>Valeur: <output id="value_7"></output></p>
                            <h5>Vitesse</h5>
                            <input id="input_8" name="input_4" type="range" min="0" max="90" step="1" />
                            <p>Valeur: <output id="value_8"></output></p>
                            <input type="submit" value="Faire tourner le flexibowl">
                        </form>
                    </div>
                </div>
            </center>
        </div>
    </div>
</div>

<script>
    let i = 1
    while (i < 9) {
        const value = document.querySelector("#value_" + i)
        const input = document.querySelector("#input_" + i)
        value.textContent = input.value
        input.addEventListener("input", (event) => {
            value.textContent = event.target.value
        })
        i++
    }

</script>


<style>
    input[type = range] {
        -webkit-appearance: none;
        width: 100%;
        height: 20px;
        background-color: #ddd;
        border-radius: 10px;
    }

        input[type = range]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 20px;
            height: 20px;
            background-color: #4CAF50;
            border-radius: 50%;
        }

    /* toggle */
    .toggle {
        cursor: pointer;
        display: inline-block;
    }

    #toggle-button1 {
        display: none;
    }

    #toggle-button2 {
        display: none;
    }

    .toggle-switch {
        display: inline-block;
        background: #ccc;
        border-radius: 16px;
        width: 58px;
        height: 32px;
        position: relative;
        vertical-align: middle;
        transition: background 0.5s;
    }

        .toggle-switch:before,
        .toggle-switch:after {
            content: "";
        }

        .toggle-switch:before {
            display: block;
            background: linear-gradient(to bottom, #fff 0%, #eee 100%);
            border-radius: 50%;
            box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);
            width: 24px;
            height: 24px;
            position: absolute;
            top: 4px;
            left: 4px;
            transition: left 0.5s;
        }

        .toggle-switch:after {
            content: "OFF";
            display: block;
            position: absolute;
            top: 7px;
            left: 32px;
            font-size: 12px;
            color: #333;
            text-shadow: 0 1px rgba(255, 255, 255, 0.5);
        }

    .toggle-checkbox:checked + .toggle-switch {
        background: #56c080;
    }

        .toggle-checkbox:checked + .toggle-switch:before {
            left: 30px;
            background: linear-gradient(to bottom, #fff 0%, #eee 100%);
            box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.25);
        }

        .toggle-checkbox:checked + .toggle-switch:after {
            content: "ON";
            left: 6px;
            color: #fff;
            text-shadow: 0 1px rgba(0, 0, 0, 0.25);
        }

    .toggle-label {
        margin-left: 5px;
        position: relative;
        top: 2px;
    }

</style>



@*Notification Démarage*@
@if (TempData["MessageReu"] != null)
{
    <div class="alert alert-success">
        <strong>Message reçu: </strong> @TempData["Messagereu"]
    </div>
    TempData["MessageReu"] = null;
}

@if (TempData["Messagefail"] != null)
{
    <div class="alert alert-warning">
        <strong>L'envoi du message a échoué.</strong> @TempData["Messagefail"]
    </div>

}

